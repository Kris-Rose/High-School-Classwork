#BlueJ class context
comment0.target=BitInputStream
comment0.text=\ Reads\ bits-at-a-time\ where\ the\ number\ of\ bits\ is\ between\ 1\ and\ 32.\ \r\n\ Updated\ for\ version\ 2.0\ to\ extend\ java.io.InputStream.\ This\ class\ \r\n\ can\ be\ used\ together\ with\ <code>BitOutputStream</code>\ to\ facilitate\ \r\n\ reading\ and\ writing\ data\ several\ bits-at-a-time.\ BitInputStream\ objects\ \r\n\ that\ are\ constructed\ from\ a\ File\ support\ <code>reset()</code>.\ However,\ \r\n\ if\ constructed\ from\ an\ <code>InputStream</code>\ an\ object\ cannot\ be\ reset.\ \r\n\ <P>\ \r\n\ Any\ exceptions\ generated\ are\ rethrown\ as\ <code>RuntimeException</code>\ objects\ \r\n\ so\ client\ code\ does\ not\ have\ to\ catch\ or\ rethrow\ them.\ (Unless\ the\ extension\ \r\n\ of\ <code>InputStream</code>\ requires\ throwing\ as\ another\ type\ of\ exception,\ e.g.,\ \r\n\ as\ with\ method\ <code>read</code>.\ \r\n\ <P>\ \r\n\ @author\ Owen\ Astrachan\ \r\n\ @version\ 1.0,\ July\ 2000\ *\ @version\ 2.0,\ October\ 2004\ \r\n
comment1.params=filename
comment1.target=BitInputStream(java.lang.String)
comment1.text=\ \ \ \ \ \r\n\ Construct\ a\ bit-at-a-time\ input\ stream\ from\ a\ file\ whose\ \ \ \r\n\ name\ is\ supplied.\ \ \ \ \ \r\n\ @param\ filename\ is\ the\ name\ of\ the\ file\ that\ will\ be\ read.\ \ \ \r\n\ @throws\ RuntimeException\ if\ filename\ cannot\ be\ opened.\ \ \ \r\n
comment2.params=file
comment2.target=BitInputStream(java.io.File)
comment2.text=\ \ \ \ \ \r\n\ Construct\ a\ bit-at-a-time\ input\ stream\ from\ <code>file</code>.\ \ \ \ \r\n\ @param\ file\ is\ the\ File\ that\ is\ the\ source\ of\ the\ input\ \ \ \ \r\n\ @throws\ RuntimeExceptoin\ if\ file\ cannot\ be\ opened.\ \ \ \ \ \r\n
comment3.params=in
comment3.target=BitInputStream(java.io.InputStream)
comment3.text=\ \ \ \ \r\n\ Open\ a\ bit-at-a-time\ stream\ that\ reads\ from\ supplied\ InputStream.\ If\ this\ \ \ \ \ \r\n\ constructor\ is\ used\ the\ BitInputStream\ is\ not\ reset-able.\ \ \ \ \ \r\n\ @param\ in\ is\ the\ stream\ from\ which\ bits\ are\ read.\ \ \ \ \r\n
comment4.params=
comment4.target=boolean\ markSupported()
comment4.text=\ \ \ \ \ \r\n\ Return\ true\ if\ the\ stream\ has\ been\ initialized\ from\ a\ File\ and\ \ \ \ \r\n\ is\ thus\ reset-able.\ If\ constructed\ from\ an\ InputStream\ it\ is\ not\ reset-able.\ \ \ \ \r\n\ @return\ true\ if\ stream\ can\ be\ reset\ (it\ has\ been\ constructed\ appropriately\ from\ a\ File).\ \ \ \ \r\n
comment5.params=
comment5.target=void\ reset()
comment5.text=\ \ \ \ \ \r\n\ Reset\ stream\ to\ beginning.\ The\ implementation\ creates\ a\ new\ \ \ \ \r\n\ stream.\ \ \ \r\n\ @throws\ IOException\ if\ not\ reset-able\ (e.g.,\ constructed\ from\ InputStream).\ \ \ \ \ \r\n
comment6.params=
comment6.target=void\ close()
comment6.text=\ \ \ \r\n\ Closes\ the\ input\ stream.\ \ \ \ \r\n\ @throws\ RuntimeException\ if\ the\ close\ fails\ \ \ \ \ \r\n
comment7.params=howManyBits
comment7.target=int\ readBits(int)
comment7.text=\ \ \ \ \r\n\ Returns\ the\ number\ of\ bits\ requested\ as\ rightmost\ bits\ in\ \ \ \ \ \r\n\ returned\ value,\ returns\ -1\ if\ not\ enough\ bits\ available\ to\ \ \ \ \r\n\ satisfy\ the\ request.\ \ \ \ \ \r\n\ \ \ \ \ \r\n\ @param\ howManyBits\ is\ the\ number\ of\ bits\ to\ read\ and\ return\ \ \ \ \r\n\ @return\ the\ value\ read,\ only\ rightmost\ <code>howManyBits</code>\ \ \ \ \r\n\ are\ valid,\ returns\ -1\ if\ not\ enough\ bits\ left\ \ \ \ \r\n
comment8.params=
comment8.target=int\ read()
comment8.text=\ \ \ \r\n\ Required\ by\ classes\ extending\ InputStream,\ returns\ \r\n\ the\ next\ byte\ from\ this\ stream\ as\ an\ int\ value.\ \ \ \r\n\ @return\ the\ next\ byte\ from\ this\ stream\ \ \ \r\n
numComments=9
